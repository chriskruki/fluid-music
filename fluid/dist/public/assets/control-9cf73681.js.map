{"version":3,"file":"control-9cf73681.js","sources":["../../../ts/control.ts"],"sourcesContent":["// DOM Elements\r\nlet canvas: HTMLCanvasElement\r\nlet ctx: CanvasRenderingContext2D | null\r\nlet connectionDot: HTMLElement\r\nlet connectionStatus: HTMLElement\r\nlet instructions: HTMLElement\r\n\r\n// WebSocket connection\r\nlet socket: WebSocket | null = null\r\nlet isConnected = false\r\nlet clientId: string | null = null\r\n\r\n/**\r\n * Initialize the control interface elements\r\n */\r\nfunction initElements(): void {\r\n  canvas = document.getElementById('control-canvas') as HTMLCanvasElement\r\n  ctx = canvas.getContext('2d')\r\n  connectionDot = document.getElementById('connection-dot') as HTMLElement\r\n  connectionStatus = document.getElementById('connection-status') as HTMLElement\r\n  instructions = document.getElementById('instructions') as HTMLElement\r\n\r\n  // Initialize pattern buttons\r\n  document.getElementById('random-splats')?.addEventListener('click', sendRandomSplats)\r\n  document.getElementById('pattern-right')?.addEventListener('click', () => sendPattern('right'))\r\n  document.getElementById('pattern-left')?.addEventListener('click', () => sendPattern('left'))\r\n  document.getElementById('pattern-up')?.addEventListener('click', () => sendPattern('up'))\r\n  document.getElementById('pattern-down')?.addEventListener('click', () => sendPattern('down'))\r\n  document\r\n    .getElementById('pattern-corners')\r\n    ?.addEventListener('click', () => sendPattern('corners'))\r\n\r\n  // Setup canvas event listeners\r\n  setupCanvasEvents()\r\n\r\n  // Handle window resize\r\n  window.addEventListener('resize', resizeCanvas)\r\n}\r\n\r\n/**\r\n * Resize canvas to fill container\r\n */\r\nfunction resizeCanvas(): void {\r\n  if (!canvas) return\r\n\r\n  const container = document.getElementById('canvas-container')\r\n  if (!container) return\r\n\r\n  canvas.width = container.clientWidth\r\n  canvas.height = container.clientHeight\r\n}\r\n\r\n/**\r\n * Initialize WebSocket connection\r\n */\r\nfunction initWebSocket(): void {\r\n  const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:'\r\n  const wsUrl = `${protocol}//${window.location.host}/ws`\r\n\r\n  socket = new WebSocket(wsUrl)\r\n\r\n  socket.onopen = handleSocketOpen\r\n  socket.onmessage = handleSocketMessage\r\n  socket.onclose = handleSocketClose\r\n  socket.onerror = handleSocketError\r\n}\r\n\r\n/**\r\n * Handle WebSocket open event\r\n */\r\nfunction handleSocketOpen(): void {\r\n  console.log('WebSocket connection established')\r\n  isConnected = true\r\n  updateConnectionStatus(true)\r\n\r\n  // Send initial connection message\r\n  sendMessage({\r\n    type: 'connect',\r\n    payload: {\r\n      role: 'controller'\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Handle incoming WebSocket messages\r\n */\r\nfunction handleSocketMessage(event: MessageEvent): void {\r\n  try {\r\n    const message = JSON.parse(event.data)\r\n\r\n    switch (message.type) {\r\n      case 'connect_ack':\r\n        clientId = message.payload.sessionId\r\n        console.log(`Connected with ID: ${clientId}`)\r\n        connectionStatus.textContent = `Connected (Controllers: ${message.payload.connectedClients.controllers}, Simulators: ${message.payload.connectedClients.simulators})`\r\n        break\r\n\r\n      case 'client_counts':\r\n        connectionStatus.textContent = `Connected (Controllers: ${message.payload.controllers}, Simulators: ${message.payload.simulators})`\r\n        break\r\n\r\n      default:\r\n        console.log('Received message:', message)\r\n    }\r\n  } catch (error) {\r\n    console.error('Error processing message:', error)\r\n  }\r\n}\r\n\r\n/**\r\n * Handle WebSocket close event\r\n */\r\nfunction handleSocketClose(): void {\r\n  console.log('WebSocket connection closed')\r\n  isConnected = false\r\n  updateConnectionStatus(false)\r\n\r\n  // Attempt to reconnect after delay\r\n  setTimeout(initWebSocket, 5000)\r\n}\r\n\r\n/**\r\n * Handle WebSocket error\r\n */\r\nfunction handleSocketError(error: Event): void {\r\n  console.error('WebSocket error:', error)\r\n  isConnected = false\r\n  updateConnectionStatus(false)\r\n}\r\n\r\n/**\r\n * Update connection status UI\r\n */\r\nfunction updateConnectionStatus(connected: boolean): void {\r\n  if (connected) {\r\n    connectionDot.classList.add('connected')\r\n    connectionStatus.textContent = 'Connected'\r\n  } else {\r\n    connectionDot.classList.remove('connected')\r\n    connectionStatus.textContent = 'Disconnected'\r\n  }\r\n}\r\n\r\n/**\r\n * Send message to server\r\n */\r\nfunction sendMessage(message: any): void {\r\n  if (socket && isConnected) {\r\n    socket.send(JSON.stringify(message))\r\n  }\r\n}\r\n\r\n/**\r\n * Get normalized coordinates from mouse/touch event\r\n */\r\nfunction getNormalizedCoordinates(event: MouseEvent | Touch): { x: number; y: number } {\r\n  const rect = canvas.getBoundingClientRect()\r\n  const x = (event.clientX - rect.left) / rect.width\r\n  const y = 1.0 - (event.clientY - rect.top) / rect.height\r\n  return { x, y }\r\n}\r\n\r\n/**\r\n * Set up canvas event listeners\r\n */\r\nfunction setupCanvasEvents(): void {\r\n  // Initialize pointers for multi-touch\r\n  const pointers = new Map()\r\n\r\n  // Mouse event handlers\r\n  canvas.addEventListener('mousedown', (e: MouseEvent) => {\r\n    const position = getNormalizedCoordinates(e)\r\n\r\n    sendMessage({\r\n      type: 'input',\r\n      payload: {\r\n        eventType: 'mousedown',\r\n        position\r\n      }\r\n    })\r\n\r\n    // Hide instructions after first interaction\r\n    instructions.classList.add('hidden')\r\n  })\r\n\r\n  canvas.addEventListener('mousemove', (e: MouseEvent) => {\r\n    if (e.buttons !== 1) return // Only send when button is pressed\r\n\r\n    const position = getNormalizedCoordinates(e)\r\n\r\n    sendMessage({\r\n      type: 'input',\r\n      payload: {\r\n        eventType: 'mousemove',\r\n        position\r\n      }\r\n    })\r\n  })\r\n\r\n  canvas.addEventListener('mouseup', (e: MouseEvent) => {\r\n    const position = getNormalizedCoordinates(e)\r\n\r\n    sendMessage({\r\n      type: 'input',\r\n      payload: {\r\n        eventType: 'mouseup',\r\n        position\r\n      }\r\n    })\r\n  })\r\n\r\n  // Touch event handlers\r\n  canvas.addEventListener('touchstart', (e: TouchEvent) => {\r\n    e.preventDefault()\r\n\r\n    Array.from(e.changedTouches).forEach((touch) => {\r\n      const position = getNormalizedCoordinates(touch)\r\n      pointers.set(touch.identifier, position)\r\n\r\n      sendMessage({\r\n        type: 'input',\r\n        payload: {\r\n          eventType: 'mousedown',\r\n          position\r\n        }\r\n      })\r\n    })\r\n\r\n    // Hide instructions after first interaction\r\n    instructions.classList.add('hidden')\r\n  })\r\n\r\n  canvas.addEventListener('touchmove', (e: TouchEvent) => {\r\n    e.preventDefault()\r\n\r\n    Array.from(e.changedTouches).forEach((touch) => {\r\n      const position = getNormalizedCoordinates(touch)\r\n      pointers.set(touch.identifier, position)\r\n\r\n      sendMessage({\r\n        type: 'input',\r\n        payload: {\r\n          eventType: 'mousemove',\r\n          position\r\n        }\r\n      })\r\n    })\r\n  })\r\n\r\n  canvas.addEventListener('touchend', (e: TouchEvent) => {\r\n    e.preventDefault()\r\n\r\n    Array.from(e.changedTouches).forEach((touch) => {\r\n      const position = getNormalizedCoordinates(touch)\r\n      pointers.delete(touch.identifier)\r\n\r\n      sendMessage({\r\n        type: 'input',\r\n        payload: {\r\n          eventType: 'mouseup',\r\n          position\r\n        }\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Send random splats command\r\n */\r\nfunction sendRandomSplats(): void {\r\n  sendMessage({\r\n    type: 'command',\r\n    payload: {\r\n      command: 'random_splats',\r\n      parameters: {\r\n        count: 10\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Send pattern command\r\n */\r\nfunction sendPattern(patternName: string): void {\r\n  sendMessage({\r\n    type: 'command',\r\n    payload: {\r\n      command: 'preset_pattern',\r\n      parameters: {\r\n        patternName\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Initialize the control interface\r\n */\r\nfunction initialize(): void {\r\n  initElements()\r\n  resizeCanvas()\r\n  initWebSocket()\r\n}\r\n\r\n// Initialize on load\r\nwindow.addEventListener('load', initialize)\r\n\r\nexport {}\r\n"],"names":["canvas","connectionDot","connectionStatus","instructions","socket","isConnected","clientId","initElements","_a","sendRandomSplats","_b","sendPattern","_c","_d","_e","_f","setupCanvasEvents","resizeCanvas","container","initWebSocket","wsUrl","handleSocketOpen","handleSocketMessage","handleSocketClose","handleSocketError","updateConnectionStatus","sendMessage","event","message","error","connected","getNormalizedCoordinates","rect","x","y","pointers","position","touch","patternName","initialize"],"mappings":"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"}